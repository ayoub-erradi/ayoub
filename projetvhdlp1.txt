library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity prime_generator is
    Port (
        clk    : in  std_logic;
        reset  : in  std_logic;
        prime  : out std_logic;
        number : out integer range 2 to 2**31-1
    );
end prime_generator;
architecture Behavioral of prime_generator is

    signal current_number : integer range 2 to 2**31-1 := 2;
    signal is_prime       : std_logic := '0';

begin

    process(clk, reset)
    begin
        if reset = '1' then
            current_number <= 2;
            is_prime <= '0';
        elsif rising_edge(clk) then
            is_prime <= '1';
            
            for i in 2 to integer(sqrt(real(current_number))) loop
                if current_number mod i = 0 then
                    is_prime <= '0';
                    exit;
                end if;
            end loop;

            if is_prime = '1' then
                number <= current_number;
                prime <= '1';
            else
                prime <= '0';
            end if;
            current_number <= current_number + 1;
        end if;
    end process;

end Behavioral;
